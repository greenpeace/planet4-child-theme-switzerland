/*
Master theme styles include a confusing hover behavior that sets button hover colors when the cursor hovers over the element, not just the button.
We reset the same style for hover and non-hover to get back expected bahavior, then add back hover state for the button.
 */
body .boxout,
body .boxout:hover {
	margin-bottom: 2rem;

	.boxout-excerpt {
		font-size: 1rem;
	}

	.boxout-heading,
	.boxout-excerpt {
		line-height: 1.5;
	}

	.btn {
		margin-bottom: 0;

		background: var(--button-primary--background, #73BE1E);
		color: var(--button-primary--color, #fff);

		font-size: 14px;
		line-height: 1.5;

		&:hover {
			background: var(--button-primary--hover--background, #00573a);
			color: var(--button-primary--hover--color, #fff);
		}
	}
}

@media (max-width: $extra-large-width) {
	body .boxout {
		height: 220px;
		padding-bottom: 1em;

		img {
			width: 250px;
			height: 220px;
		}

		.boxout-content {
			padding-left: 250px;
		}

		.btn {
			position: relative;
			display: inline-block;
			margin-left: 1em;
			margin-top: 2em;
		}
	}
}

@media (max-width: $large-width) {
	body .boxout {
		img {
			width: 220px;
		}

		.boxout-content {
			.boxout-excerpt {
				padding-left: 0;
				font-size: .875rem;
			}
		}

		.boxout-heading {
			font-size: 1.125rem;
		}

		.btn {
			margin-top: 1em;
			margin-left: 2em;
		}
	}
}


@include media('<=tablet') {
	body .boxout {
		height: auto;
		padding-bottom: 1em;

		img {
			width: 160px;
			height: 160px;
		}

		.boxout-heading {
			margin-bottom: .5em;
		}

		.boxout-content {
			padding-left: 160px;
		}

		.boxout-excerpt {
			display: block;
		}

		.btn {
			margin-top: 1em;
			margin-left: 176px;
		}
	}
}

@media (max-width: 480px) {
	body .boxout {
		img {
			width: 120px;
			height: 120px;
		}

		.boxout-content {
			padding-left: 120px;
		}

		.btn {
			margin-left: 136px;
		}
	}
}

/* Color Schemes */
@for $i from 1 through length($schema_names) {
	#{nth($selectors, $i)} {
		.boxout,
		.boxout:hover {
			.btn {
				background: #{nth($colors_1, $i)};
				color: #{nth($colors_1_font, $i)};

				&:hover {
					background: #{nth($colors_2, $i)};
					color: #{nth($colors_2_font, $i)};
				}
			}
		}
	}
}
